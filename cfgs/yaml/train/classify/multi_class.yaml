_base_:
  - cfgs/yaml/train/train_base.yaml
  - cfgs/yaml/train/tuning_base.yaml

model_part:
  _target_: rainbowneko.parser.CfgModelParser
  cfg_model:
    - lr: 0.01
      layers:
        - ''

ckpt_saver:
  model:
    _target_: rainbowneko.ckpt_manager.ckpt_saver
    target_module: model
    layers: all

train:
  train_epochs: 100
  workers: 2
  max_grad_norm: null
  save_step: 2000
  loss:
    _target_: rainbowneko.train.loss.base.LossContainer
    loss:
      _target_: torch.nn.modules.loss.CrossEntropyLoss
  optimizer:
    _target_: torch.optim.adamw.AdamW
    _partial_: true
    weight_decay: 0.0005
  scale_lr: false
  lr_scheduler:
    name: cosine
    warmup_steps: 10
  metrics:
    _target_: rainbowneko.evaluate.metrics.MetricGroup
    acc:
      _target_: rainbowneko.evaluate.metrics.MetricContainer
      _args_:
        - _target_: torchmetrics.classification.accuracy.MulticlassAccuracy
          num_classes: 10
    f1:
      _target_: rainbowneko.evaluate.metrics.MetricContainer
      _args_:
        - _target_: torchmetrics.classification.f_beta.MulticlassF1Score
          num_classes: 10

model:
  name: cifar-resnet18
  wrapper:
    _target_: rainbowneko.models.wrapper.base.SingleWrapper
    _partial_: true
    model:
      _target_: rainbowneko.utils.cfg_tool.load_resnet
      num_classes: 10

data_train:
  dataset1:
    _target_: rainbowneko.data.dataset.BaseDataset
    _partial_: true
    batch_size: 128
    loss_weight: 1.0
    source:
      data_source1:
        _target_: rainbowneko.data.source.index.IndexSource
        data:
          _target_: torchvision.datasets.cifar.CIFAR10
          root: D:\others\dataset\cifar
          train: true
          download: true
    handler:
      _target_: rainbowneko.data.handler.base.HandlerChain
      load:
        _target_: rainbowneko.data.handler.image.LoadImageHandler
      bucket: ${neko.get:rainbowneko.data.bucket.fixed.FixedBucket.handler}
      image:
        _target_: rainbowneko.data.handler.image.ImageHandler
        transform:
          _target_: torchvision.transforms.transforms.Compose
          _args_:
            - - _target_: torchvision.transforms.transforms.RandomCrop
                size: 32
                padding: 4
              - _target_: torchvision.transforms.transforms.RandomHorizontalFlip
              - _target_: torchvision.transforms.transforms.ToTensor
              - _target_: torchvision.transforms.transforms.Normalize
                mean: [ 0.4914, 0.4822, 0.4465 ]
                std: [ 0.2023, 0.1994, 0.201 ]
    bucket:
      _target_: rainbowneko.data.bucket.fixed.FixedBucket
      target_size: 32

evaluator:
  _target_: rainbowneko.evaluate.evaluator.Evaluator
  _partial_: true
  interval: 500
  metric:
    _target_: rainbowneko.evaluate.metrics.MetricGroup
    acc:
      _target_: rainbowneko.evaluate.metrics.MetricContainer
      _args_:
        - _target_: torchmetrics.classification.accuracy.MulticlassAccuracy
          num_classes: 10
    f1:
      _target_: rainbowneko.evaluate.metrics.MetricContainer
      _args_:
        - _target_: torchmetrics.classification.f_beta.MulticlassF1Score
          num_classes: 10
  dataset:
    _target_: rainbowneko.data.dataset.BaseDataset
    _partial_: true
    batch_size: 128
    loss_weight: 1.0
    source:
      data_source1:
        _target_: rainbowneko.data.source.index.IndexSource
        data:
          _target_: torchvision.datasets.cifar.CIFAR10
          root: D:\others\dataset\cifar
          train: false
          download: true
    handler:
      _target_: rainbowneko.data.handler.base.HandlerChain
      load:
        _target_: rainbowneko.data.handler.image.LoadImageHandler
      bucket: ${neko.get:rainbowneko.data.bucket.fixed.FixedBucket.handler}
      image:
        _target_: rainbowneko.data.handler.image.ImageHandler
        transform:
          _target_: torchvision.transforms.transforms.Compose
          _args_:
            - - _target_: torchvision.transforms.transforms.ToTensor
              - _target_: torchvision.transforms.transforms.Normalize
                mean: [ 0.4914, 0.4822, 0.4465 ]
                std: [ 0.2023, 0.1994, 0.201 ]
    bucket:
      _target_: rainbowneko.data.bucket.fixed.FixedBucket
      target_size: 32
